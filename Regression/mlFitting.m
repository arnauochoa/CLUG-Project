function [Result] = mlFitting(Data, Config)

    N   =   length(Data.Y);

    [Result.MLfit.thetaMean    , ...
     Result.MLfit.muMean       , ...
     Result.MLfit.sigmaMean    , ...
     Result.MLfit.J_historyMean, ...
     Result.MLfit.errorMean    , ...
     Result.MLfit.X_norm]   = gradientDescent(Data.X, Data.Y, Config);

    Result.MLfit.fmean = @(x, y)    Result.MLfit.thetaMean(1)       +   ...
                                    Result.MLfit.thetaMean(2).*x    +   ...
                                    Result.MLfit.thetaMean(3).*y    +   ...
                                    Result.MLfit.thetaMean(4).*x.^2 +   ...
                                    Result.MLfit.thetaMean(5).*x.*y +   ...
                                    Result.MLfit.thetaMean(6).*y.^2;
    
    evalFMean   =   feval(Result.MLfit.fmean, Result.MLfit.X_norm(:,1), Result.MLfit.X_norm(:,2)); 
    Result.MLfit.meanRMSE   =   1/N * ((evalFMean - Data.Y)' * (evalFMean - Data.Y));
    
    Result.MLfit.thetaMean_denorm = zeros(6,1);
    Result.MLfit.thetaMean_denorm(1) = Result.MLfit.thetaMean(1) - ...
                                       (Result.MLfit.thetaMean(2)*Result.MLfit.muMean(1)/Result.MLfit.sigmaMean(1)) - ...
                                       (Result.MLfit.thetaMean(3)*Result.MLfit.muMean(2)/Result.MLfit.sigmaMean(2)) + ...
                                       (Result.MLfit.thetaMean(4)*(Result.MLfit.muMean(1)^2)/(Result.MLfit.sigmaMean(1)^2)) + ...
                                       (Result.MLfit.thetaMean(5)*Result.MLfit.muMean(1)*Result.MLfit.muMean(2)/(Result.MLfit.sigmaMean(1)*Result.MLfit.sigmaMean(2))) + ...
                                       (Result.MLfit.thetaMean(6)*(Result.MLfit.muMean(2)^2)/(Result.MLfit.sigmaMean(2)^2));
    Result.MLfit.thetaMean_denorm(2) = (Result.MLfit.thetaMean(2)/Result.MLfit.sigmaMean(1)) - ...
                                       (2*Result.MLfit.thetaMean(4)*Result.MLfit.muMean(1)/(Result.MLfit.sigmaMean(1)^2)) - ...
                                       (Result.MLfit.thetaMean(5)*Result.MLfit.muMean(2)/(Result.MLfit.sigmaMean(1)*Result.MLfit.sigmaMean(2)));
    Result.MLfit.thetaMean_denorm(3) = (Result.MLfit.thetaMean(3)/Result.MLfit.sigmaMean(2)) - ...
                                       (2*Result.MLfit.thetaMean(6)*Result.MLfit.muMean(2)/(Result.MLfit.sigmaMean(2)^2)) - ...
                                       (Result.MLfit.thetaMean(5)*Result.MLfit.muMean(1)/(Result.MLfit.sigmaMean(1)*Result.MLfit.sigmaMean(2)));
    Result.MLfit.thetaMean_denorm(4) = (Result.MLfit.thetaMean(4)/(Result.MLfit.sigmaMean(1)^2));
    Result.MLfit.thetaMean_denorm(5) = (Result.MLfit.thetaMean(5)/(Result.MLfit.sigmaMean(1)*Result.MLfit.sigmaMean(2)));
    Result.MLfit.thetaMean_denorm(6) = (Result.MLfit.thetaMean(6)/(Result.MLfit.sigmaMean(2)^2));
    
                   
    
    Result.MLfit.fmean_denorm = @(x, y)    Result.MLfit.thetaMean_denorm(1)       +   ...
                                    Result.MLfit.thetaMean_denorm(2).*x    +   ...
                                    Result.MLfit.thetaMean_denorm(3).*y    +   ...
                                    Result.MLfit.thetaMean_denorm(4).*x.^2 +   ...
                                    Result.MLfit.thetaMean_denorm(5).*x.*y +   ...
                                    Result.MLfit.thetaMean_denorm(6).*y.^2;
    evalFMean_denorm   =   feval(Result.MLfit.fmean_denorm, Data.X(:,1), Data.X(:,2));
    Result.MLfit.meanRMSE_denorm   =   1/N * ((evalFMean_denorm - Data.Y)' * (evalFMean_denorm - Data.Y));
    
                                
    
    
    
    [Result.MLfit.thetaStd    , ...
     Result.MLfit.muStd       , ...
     Result.MLfit.sigmaStd    , ...
     Result.MLfit.J_historyStd, ...
     Result.MLfit.errorStd    , ...
     ~]   = gradientDescent(Data.X, abs(Result.MLfit.errorMean), Config);
    
    
    Result.MLfit.fstd = @(x, y)     Result.MLfit.thetaStd(1)        +   ...
                                    Result.MLfit.thetaStd(2).*x     +   ...
                                    Result.MLfit.thetaStd(3).*y     +   ...
                                    Result.MLfit.thetaStd(4).*x.^2  +   ...
                                    Result.MLfit.thetaStd(5).*x.*y  +   ...
                                    Result.MLfit.thetaStd(6).*y.^2;
    evalFStd   =   feval(Result.MLfit.fstd, Result.MLfit.X_norm(:,1), Result.MLfit.X_norm(:,2)); 
    Result.MLfit.stdRMSE   =   1/N * ((evalFStd - abs(Result.MLfit.errorMean))' * (evalFStd - abs(Result.MLfit.errorMean)));
    
    Result.MLfit.thetaStd_denorm = zeros(6,1);
    Result.MLfit.thetaStd_denorm(1) = Result.MLfit.thetaStd(1) - ...
                                       (Result.MLfit.thetaStd(2)*Result.MLfit.muStd(1)/Result.MLfit.sigmaStd(1)) - ...
                                       (Result.MLfit.thetaStd(3)*Result.MLfit.muStd(2)/Result.MLfit.sigmaStd(2)) + ...
                                       (Result.MLfit.thetaStd(4)*(Result.MLfit.muStd(1)^2)/(Result.MLfit.sigmaStd(1)^2)) + ...
                                       (Result.MLfit.thetaStd(5)*Result.MLfit.muStd(1)*Result.MLfit.muStd(2)/(Result.MLfit.sigmaStd(1)*Result.MLfit.sigmaStd(2))) + ...
                                       (Result.MLfit.thetaStd(6)*(Result.MLfit.muStd(2)^2)/(Result.MLfit.sigmaStd(2)^2));
    Result.MLfit.thetaStd_denorm(2) = (Result.MLfit.thetaStd(2)/Result.MLfit.sigmaStd(1)) - ...
                                       (2*Result.MLfit.thetaStd(4)*Result.MLfit.muStd(1)/(Result.MLfit.sigmaStd(1)^2)) - ...
                                       (Result.MLfit.thetaStd(5)*Result.MLfit.muStd(2)/(Result.MLfit.sigmaStd(1)*Result.MLfit.sigmaStd(2)));
    Result.MLfit.thetaStd_denorm(3) = (Result.MLfit.thetaStd(3)/Result.MLfit.sigmaStd(2)) - ...
                                       (2*Result.MLfit.thetaStd(6)*Result.MLfit.muStd(2)/(Result.MLfit.sigmaStd(2)^2)) - ...
                                       (Result.MLfit.thetaStd(5)*Result.MLfit.muStd(1)/(Result.MLfit.sigmaStd(1)*Result.MLfit.sigmaStd(2)));
    Result.MLfit.thetaStd_denorm(4) = (Result.MLfit.thetaStd(4)/(Result.MLfit.sigmaStd(1)^2));
    Result.MLfit.thetaStd_denorm(5) = (Result.MLfit.thetaStd(5)/(Result.MLfit.sigmaStd(1)*Result.MLfit.sigmaStd(2)));
    Result.MLfit.thetaStd_denorm(6) = (Result.MLfit.thetaStd(6)/(Result.MLfit.sigmaStd(2)^2));
    
    Result.MLfit.fstd_denorm = @(x, y)    Result.MLfit.thetaStd_denorm(1)       +   ...
                                    Result.MLfit.thetaStd_denorm(2).*x    +   ...
                                    Result.MLfit.thetaStd_denorm(3).*y    +   ...
                                    Result.MLfit.thetaStd_denorm(4).*x.^2 +   ...
                                    Result.MLfit.thetaStd_denorm(5).*x.*y +   ...
                                    Result.MLfit.thetaStd_denorm(6).*y.^2;
    evalFStd_denorm   =   feval(Result.MLfit.fstd_denorm, Data.X(:,1), Data.X(:,2));
    Result.MLfit.stdRMSE_denorm   =   1/N * ((evalFStd_denorm - abs(Result.MLfit.errorMean))' * (evalFStd_denorm - abs(Result.MLfit.errorMean)));
    
end